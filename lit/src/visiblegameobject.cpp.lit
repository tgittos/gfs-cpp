== The visible game object ==
This class represents every object that needs to
be drawn. Note that it's an abstract class and that
it isn't intended to be created directly.

== Constructor ==
-
VisibleGameObject::VisibleGameObject()
{
  _isLoaded = false;
}
-

== Destructor ==
The author of the tutorial has the destructor empty
but it probably shouldn't be since we create an
SFML image and sprite.
-
VisibleGameObject::~VisibleGameObject()
{
}
-

== Load ==
Fail silently (not sure about that) and nuke the path if
it doesn't load properly.
Otherwise, save the path and the image data. Note that we
call SetImage on the sprite because it's already been
instantiated.
-
void VisibleGameObject::Load(std::string filename)
{
  if(!_image.LoadFromFile(filename))
  {
    _filename = "";
    _isLoaded = false;
  } else {
    _filename = filename;
    _sprite.SetImage(_image);
    _isLoaded = true;
  }
}
-

== Draw ==
Only draw the sprite if it's loaded
-
void VisibleGameObject::Draw(sf::RenderWindow& window)
{
  if(_isLoaded)
  {
    window.Draw(_sprite);
  }
}
-

== Update ==
You'll notice we're not delcaring the update method here.
That is because it is a pure virtual method, which means
it has no implementation on the base class, and all
derived classes need to implement it themselves.

== Set position ==
Only set the position if it's loaded
-
void VisibleGameObject::SetPosition(float x, float y)
{
  if(_isLoaded)
  {
    _sprite.SetPosition(x, y);
  }
}
-

== Get position ==
If the object is loaded, return the position of the
object. If it's not loaded, return a default vector.
-
sf::Vector2f VisibleGameObject::GetPosition() const
{
  if(_isLoaded)
  {
    return _sprite.GetPosition();
  }
  return sf::Vector2f();
}
-

== Get sprite ==
-
sf::Sprite& VisibleGameObject::GetSprite()
{
  return _sprite;
}
-

== Is loaded ==
-
bool VisibleGameObject::IsLoaded() const
{
  return _isLoaded;
}
-

== Includes ==
-
#include "visiblegameobject.hpp"
-

== @visiblegameobject.cpp ==
Includes.

Constructor.

Destructor.

Load.

Draw.

Set position.

Get position.

Get sprite.

Is loaded.